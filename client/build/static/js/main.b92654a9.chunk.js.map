{"version":3,"sources":["utils/keys.js","components/Jumbotron/index.js","components/Grid/index.js","components/Form/index.js","utils/API.js","pages/Books.js","pages/Saved.js","pages/Detail.js","pages/NoMatch.js","components/Nav/index.js","App.js","index.js"],"names":["exports","google","key","process","REACT_APP_GOOGLE_SECRET","Jumbotron","_ref","children","react_default","a","createElement","style","clear","textAlign","background","className","Container","fluid","concat","Row","_ref2","Col","_ref3","size","split","map","join","Input","props","Object","assign","id","type","FormBtn","require","config","keys","API","getBooks","axios","get","searchBooks","query","console","log","getBook","deleteBook","delete","saveBook","bookData","post","Books","state","books","loadBooks","then","res","_this","setState","data","catch","err","handleInputChange","event","_event$target","target","name","value","defineProperty","handleFormSubmit","preventDefault","title","response","this","document","getElementById","focus","components_Jumbotron","placeholder","onChange","disabled","onClick","Component","Saved","NoMatch","role","aria-label","Nav","NavLink","to","data-toggle","data-target","aria-controls","aria-expanded","App","BrowserRouter","components_Nav","Switch","Route","exact","path","component","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.b92654a9.chunk.js","sourcesContent":["exports.google = {\n    key: process.env.REACT_APP_GOOGLE_SECRET\n}","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ clear: \"both\", textAlign: \"center\", background: \"transparent\"}}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`p-0 container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`d-flex justify-content-center row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n      <input id=\"book-search\" type=\"text\" className=\"form-control bg-secondary border-0 text-light\" {...props} />\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <div className=\"input-group-append\">\n      <button {...props} className=\"btn btn-primary\">\n        {props.children}\n      </button>\n    </div>\n  );\n}\n","import axios from \"axios\";\nrequire(\"dotenv\").config();\nconst keys = require(\"./keys.js\")\n\n\nexport default {\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  searchBooks: function(query) {\n    console.log(keys)\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query+ \"&key=\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport API from \"../utils/API\";\n\nclass Books extends Component {\n  // Initialize this.state.books as an empty array\n  state = {\n    books: []\n  };\n\n  componentDidMount() {\n    this.loadBooks();\n    document.getElementById(\"book-search\").focus()\n  }\n\n  // Add code here to get all books from the database and save them to this.state.books\n  loadBooks = () => {\n      API.getBooks()\n        .then(res => this.setState({ books: res.data}))\n        .catch(err => console.log(err))\n  }\n\n\n  handleInputChange = event => {\n    // Pull the name and value properties off of the event.target (the element which triggered the event)\n    const { name, value } = event.target;\n\n\n    // Set the state for the appropriate input field\n    this.setState({\n      [name]: value //NOTE: using a variable as a property name would set a new property\n    });\n  };\n\n  // handleFormSubmit = event => {\n  //   event.preventDefault();\n  //   if(this.state.title && this.state.author) {\n  //     API.saveBook({\n  //       title : this.state.title, \n  //       author: this.state.author, \n  //       synopsis: this.state.sypnosis\n  //     }).then(res => this.loadBooks())\n\n  //   }\n  // }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if(this.state.title) {\n      API.searchBooks(\"Harry Potter\")\n      .then(function(response) {\n        console.log(response)\n      })\n\n    }\n  }\n\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n\n  render() {\n    return (\n      <Container fluid>\n      <Jumbotron>\n        <Row>\n          \n            <Col size=\"md-6\">\n\n            <div className=\"input-group\">\n            <Input name=\"title\" placeholder=\"Type something...\" onChange={this.handleInputChange} />\n            <FormBtn disabled={!this.state.title ? true : false} onClick={this.handleFormSubmit}>Search Books</FormBtn>\n            </div>\n           \n\n            </Col>\n            \n         </Row>\n         </Jumbotron>\n          {/* <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Books On My List</h1>\n            </Jumbotron>\n            {this.state.books.length ? (\n              <List>\n                {this.state.books.map(book => (\n                  <ListItem key={book._id}>\n                    <a href={\"/books/\" + book._id}>\n                      <strong>\n                        {book.title} by {book.author}\n                      </strong>\n                    </a>\n                    <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col> */}\n      </Container>\n    );\n  }\n}\n\nexport default Books;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport API from \"../utils/API\";\n\nclass Saved extends Component {\n  // Initialize this.state.books as an empty array\n  state = {\n    books: []\n  };\n\n\n  render() {\n    return (\n      <Container fluid>\n      <Jumbotron>\n        <Row>\n          \n            <Col size=\"md-6\">\n\n            \n            <h4>Saved Books</h4>\n           \n\n            </Col>\n            \n         </Row>\n         </Jumbotron>\n          {/* <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Books On My List</h1>\n            </Jumbotron>\n            {this.state.books.length ? (\n              <List>\n                {this.state.books.map(book => (\n                  <ListItem key={book._id}>\n                    <a href={\"/books/\" + book._id}>\n                      <strong>\n                        {book.title} by {book.author}\n                      </strong>\n                    </a>\n                    <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col> */}\n      </Container>\n    );\n  }\n}\n\nexport default Saved;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n\nclass Detail extends Component {\n  state = {\n    book: {}\n  };\n  // Add code to get the book with an _id equal to the id in the route param\n  // e.g. http://localhost:3000/books/:id\n  // The book id for this route can be accessed using this.props.match.params.id\n\n componentDidMount() {\n    API.getBook(this.props.match.params.id)\n     .then(res =>  this.setState({book: res.data})\n     )}\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>\n                {this.state.book.title} by {this.state.book.author}\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-10 md-offset-1\">\n            <article>\n              <h1>Synopsis</h1>\n              <p>{this.state.book.synopsis}</p>\n            </article>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-2\">\n            <Link to=\"/\">← Back to Authors</Link>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Detail;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\nimport { NavLink } from 'react-router-dom'\n\nfunction Nav(props) {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <NavLink to=\"books\" className=\"navbar-brand\"><i className=\"fas fa-book-open\"></i></NavLink>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <NavLink to=\"/books\" className=\"nav-link\">Search</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink to=\"/saved\" className=\"nav-link\">Saved</NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport Books from \"./pages/Books\";\nimport Saved from \"./pages/Saved\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n  return (\n    <Router>\n    <div>\n      <Nav/>\n      <Switch>\n          <Route exact path=\"/\" component={Books} />\n          <Route exact path=\"/books\" component={Books} />\n          <Route exact path=\"/saved\" component={Saved} />\n          <Route component={NoMatch} />\n      </Switch>\n\n    </div>\n    </Router>\n\n\n\n  )\n  };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}